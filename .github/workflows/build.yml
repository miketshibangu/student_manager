name: Build executables

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            spec_name: Linux
          - os: windows-latest  
            spec_name: Windows
          - os: macos-latest
            spec_name: macOS

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libglib2.0-0

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller PySide6

      - name: Create PyInstaller spec file
        run: |
          cat > build.spec << EOF
          # -*- mode: python ; coding: utf-8 -*-

          block_cipher = None

          a = Analysis(
              ['main.py'],
              pathex=[],
              binaries=[],
              datas=[],
              hiddenimports=[
                  'PySide6.QtCore',
                  'PySide6.QtGui', 
                  'PySide6.QtWidgets',
                  'PySide6.QtNetwork',
                  'shiboken6'
              ],
              hookspath=[],
              hooksconfig={},
              runtime_hooks=[],
              excludes=[],
              win_no_prefer_redirects=False,
              win_private_assemblies=False,
              cipher=block_cipher,
              noarchive=False,
          )

          pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

          exe = EXE(
              pyz,
              a.scripts,
              a.binaries,
              a.zipfiles,
              a.datas,
              [],
              name='mon_app',
              debug=False,
              bootloader_ignore_signals=False,
              strip=False,
              upx=True,
              upx_exclude=[],
              runtime_tmpdir=None,
              console=False,
              disable_windowed_traceback=False,
              target_arch=None,
              codesign_identity=None,
              entitlements_file=None,
          )
          EOF

      - name: Build executable with PyInstaller
        run: pyinstaller build.spec --onefile

      - name: List built files (for debugging)
        run: ls -la dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mon_app-${{ matrix.spec_name }}
          path: dist/
