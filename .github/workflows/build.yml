name: Build executables

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            icon_path: assets/icons/app_icon.png
          - os: windows-latest  
            icon_path: assets/icons/app_icon.ico
          - os: macos-latest
            icon_path: assets/icons/app_icon.icns

    steps:
      - uses: actions/checkout@v4

      - name: Verify icon exists
        run: |
          if [ ! -f "${{ matrix.icon_path }}" ]; then
            echo "❌ ERREUR: Fichier d'icône introuvable: ${{ matrix.icon_path }}"
            exit 1
          else
            echo "✅ Icône trouvée: ${{ matrix.icon_path }}"
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # Packages essentiels pour PySide6 sur Linux
          sudo apt-get install -y libxcb-xinerama0 libgl1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          # Construction différente selon l'OS
          if [ "$RUNNER_OS" == "Linux" ]; then
            pyinstaller --onefile --windowed --icon "${{ matrix.icon_path }}" --name mon_app main.py
          elif [ "$RUNNER_OS" == "Windows" ]; then
            pyinstaller --onefile --windowed --icon "${{ matrix.icon_path }}" --name mon_app main.py
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pyinstaller --onefile --windowed --icon "${{ matrix.icon_path }}" --name mon_app main.py
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mon_app-${{ runner.os }}
          path: |
            dist/*
            # Capture tous les fichiers générés
