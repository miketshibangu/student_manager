name: Build Executables

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # 1️⃣ Récupérer le code
      - uses: actions/checkout@v4

      # 2️⃣ Installer Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3️⃣ Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 4️⃣ Build executable avec gestion des icônes
      - name: Build executable
        run: |
          # Déterminer l'extension de l'icône
          if [ "${{ runner.os }}" = "Windows" ]; then
            ICON="assets/icons/app_icon.ico"
          elif [ "${{ runner.os }}" = "macOS" ]; then
            ICON="assets/icons/app_icon.icns"
          else
            ICON="assets/icons/app_icon.png"
          fi
          
          # Construire l'exécutable
          pyinstaller --onefile \
                      --name student_manager \
                      --icon "$ICON" \
                      --hidden-import=PySide6 \
                      --hidden-import=PySide6.QtCore \
                      --hidden-import=PySide6.QtGui \
                      --hidden-import=PySide6.QtWidgets \
                      --add-data "assets:assets" \
                      main.py
        shell: bash

      # 5️⃣ Créer le package ZIP
      - name: Create package
        run: |
          # Créer le répertoire de package
          mkdir -p package
          
          # Copier l'exécutable
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp dist/student_manager.exe package/
          else
            cp dist/student_manager package/
          fi
          
          # Copier les assets
          cp -r assets package/
          
          # Créer l'archive
          if [ "${{ runner.os }}" = "Windows" ]; then
            cd package
            7z a ../dist/student_manager-${{ runner.os }}.zip *
          else
            cd package
            zip -r ../dist/student_manager-${{ runner.os }}.zip *
          fi
        shell: bash

      # 6️⃣ Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: student_manager-${{ runner.os }}
          path: dist/student_manager-${{ runner.os }}.zip
