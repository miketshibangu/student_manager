name: Build executables

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Debug file structure
        run: |
          echo "Structure des fichiers :"
          find . -name "*.py" -o -name "requirements.txt" | head -20
          echo "Assets icons :"
          ls -la assets/icons/ || echo "Dossier icons non trouvé"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Verify Python installation
        run: |
          python --version
          pip --version

      - name: Install dependencies with verbose
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -v
          pip install pyinstaller -v

      - name: Build executable (safe approach)
        run: |
          # Construction générique sans icône d'abord
          pyinstaller --onefile --name "mon_app" main.py
          echo "Build de base réussi"

      - name: Try with icon if exists
        run: |
          if [ "$RUNNER_OS" == "Linux" ] && [ -f "assets/icons/app_icon.png" ]; then
            echo "Building avec icône PNG pour Linux"
            pyinstaller --onefile --windowed --icon assets/icons/app_icon.png --name "mon_app" main.py
          elif [ "$RUNNER_OS" == "Windows" ] && [ -f "assets/icons/app_icon.ico" ]; then
            echo "Building avec icône ICO pour Windows"
            pyinstaller --onefile --windowed --icon assets/icons/app_icon.ico --name "mon_app" main.py
          elif [ "$RUNNER_OS" == "macOS" ] && [ -f "assets/icons/app_icon.icns" ]; then
            echo "Building avec icône ICNS pour macOS"
            pyinstaller --onefile --windowed --icon assets/icons/app_icon.icns --name "mon_app" main.py
          else
            echo "Icône non trouvée, utilisation du build de base"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: dist/
          if-no-files-found: warn
